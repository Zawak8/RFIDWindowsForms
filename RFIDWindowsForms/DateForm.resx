<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>